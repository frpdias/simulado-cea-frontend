<script lang="ts">
  import { supabase } from '$lib/supabaseClient';
  import { createClient } from '@supabase/supabase-js';
  import { goto } from '$app/navigation';

  // Cliente admin para bypass do RLS
  const supabaseAdmin = createClient(
    'https://zcrzyhdzjanivracmoub.supabase.co',
    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inpjcnp5aGR6amFuaXZyYWNtb3ViIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1ODI0NTA5MSwiZXhwIjoyMDczODIxMDkxfQ.T4VNBfbCClcJbhxFvEBXTFsRyZUqVtQIlnHaYVlDVao'
  );

  let nome = '';
  let email = '';
  let whatsapp = '';
  let senha = '';
  let confirmarSenha = '';
  let loading = false;
  let error = '';

  async function cadastrar() {
    error = '';
    
    if (senha !== confirmarSenha) {
      error = 'As senhas n√£o coincidem';
      return;
    }

    loading = true;

    try {
      const { data: authData, error: authError } = await supabaseAdmin.auth.signUp({
        email,
        password: senha
      });

      if (authError) throw authError;

      if (authData.user) {
        const { error: dbError } = await supabaseAdmin
          .from('usuarios')
          .insert({
            id: authData.user.id,
            nome,
            email,
            whatsapp,
            status: 'ativo',
            data_cadastro: new Date().toISOString()
          });

        if (dbError) throw dbError;

        alert('Cadastro realizado com sucesso!');
        goto('/login');
      }
    } catch (err) {
      error = err.message || 'Erro ao criar conta';
    } finally {
      loading = false;
    }
  }
</script>

<div class="container">
  <div class="card">
    <h1>Criar Conta</h1>

    {#if error}
      <div class="error">{error}</div>
    {/if}

    <form on:submit|preventDefault={cadastrar}>
      <div class="field">
        <label for="nome">Nome completo</label>
        <input id="nome" type="text" bind:value={nome} required />
      </div>

      <div class="field">
        <label for="email">Email</label>
        <input id="email" type="email" bind:value={email} required />
      </div>

      <div class="field">
        <label for="whatsapp">WhatsApp</label>
        <input id="whatsapp" type="tel" bind:value={whatsapp} required />
      </div>

      <div class="field">
        <label for="senha">Senha</label>
        <input id="senha" type="password" bind:value={senha} required />
      </div>

      <div class="field">
        <label for="confirmarSenha">Confirmar senha</label>
        <input id="confirmarSenha" type="password" bind:value={confirmarSenha} required />
      </div>

      <button type="submit" disabled={loading} class="btn">
        {loading ? 'Criando conta...' : 'Criar conta'}
      </button>
    </form>
  </div>
</div>

<style>
  .container {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    padding: 2rem;
  }

  .card {
    background: white;
    padding: 3rem;
    border-radius: 16px;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 480px;
  }

  h1 {
    text-align: center;
    color: #333;
    margin-bottom: 2rem;
  }

  .field {
    margin-bottom: 1.5rem;
  }

  label {
    display: block;
    margin-bottom: 0.5rem;
    color: #333;
    font-weight: 500;
  }

  input {
    width: 100%;
    padding: 0.875rem;
    border: 2px solid #e1e5e9;
    border-radius: 8px;
    font-size: 1rem;
    box-sizing: border-box;
  }

  .btn {
    width: 100%;
    padding: 1rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1.1rem;
    cursor: pointer;
    margin-top: 1rem;
  }

  .error {
    background: #fee;
    color: #c33;
    padding: 0.875rem;
    border-radius: 8px;
    margin-bottom: 1.5rem;
  }
</style>
